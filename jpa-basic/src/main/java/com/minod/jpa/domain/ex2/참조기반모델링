참조기반 모델링을 하는데 중요한점은 일딴 단방향으로 전부 설계하는 것이다.
외래키로 사용되는 것들 위주로 참조할 수 있는 부분을 확인해서 단방향 참조로 바꿔보자.
참조 위주로 바꾸지 않아도 사용하는데 문제는 없다만,

참조 기반으로 바꾸는 이유는 외래키로 참조되는 객체들을 찾는데 일일이 find로 찾아서 조회나 수정하는 것 보다.
좀 더 쉽게 불러와서 사용하기 위함이다.

이 뿐만 아니라 별도 비즈니스적 이유가 있다면 참조를 만드는 것도 좋다.
반대로 외래키로 등록되어 있다고 해도 반드시 참조를 만드는게 좋은것도 아니다.
구체적으로 Member에는 참조로 다른 엔티티를 매핑하는게 좋은게 아니라고 한다.(관심사를 끊어낼 것은 끊어내야 한다.)
(일일이 연관관계 생각하다보면 끝이없으니까)

사진의 Member에 orders를 List로 Order정보를 참조할 필요가 있을까?
member조회할때마다 orders가 매번 나와야 될 필요가 있다면 참조하는것도 좋을것이다.
그러나 그게 아니라면? Member같은건 보통 참조를 빼는게 관례라고 한다.
이번엔 예제다보니깐 그냥 이유없이 양방향매핑 해본다.